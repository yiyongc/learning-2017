package com.capgemini.dao;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;

import org.springframework.stereotype.Repository;

import com.capgemini.pojo.Product;

@Repository
public class ProductDaoImpl implements IProductDao {

	@PersistenceContext
	private EntityManager em;
	
	@Override
	public void createProduct(Product product) {
		em.persist(product);
	}

	@Override
	public void persistAllProducts(List<Product> products) {
		for(Product product : products) {
			em.persist(product);
		}
	}

	@Override
	public Product findProduct(int productId) {
		return em.find(Product.class, productId);
	}

	@Override
	public void deleteProduct(int productId) {
		em.remove(findProduct(productId));
	}

	@Override
	public void updateProduct(Product product) {
		Product productToUpdate = findProduct(product.getProductId());
		
		productToUpdate.setProductName(product.getProductName());
		productToUpdate.setPrice(product.getPrice());
		productToUpdate.setExpiryDate(product.getExpiryDate());
		productToUpdate.setQuantity(product.getQuantity());
		productToUpdate.setDescription(product.getDescription());
		
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<Product> findAllProducts() {
		return em.createQuery("FROM Product").getResultList();
	}

	@Override
	public List<Product> findByProductName(String productName) {
		return em.createQuery("FROM Product p WHERE p.productName = " + productName).getResultList();
	}

}
